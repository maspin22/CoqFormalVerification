DIGEST 05b800543fa2c5f0aede7b6da0ac1c22
FLF.Tactics
R664:667 LF.Poly <> <> lib
prf 943:948 <> silly1
R970:972 Coq.Init.Datatypes <> nat ind
R986:995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1023:1025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1018:1018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1020:1020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1022:1022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1019:1019 LF.Tactics <> n var
R1021:1021 LF.Tactics <> o var
R1026:1026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1028:1028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1030:1030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1027:1027 LF.Tactics <> m var
R1029:1029 LF.Tactics <> p var
R1001:1003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R996:996 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R998:998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1000:1000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R997:997 LF.Tactics <> n var
R999:999 LF.Tactics <> o var
R1004:1004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1006:1006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1008:1008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1005:1005 LF.Tactics <> n var
R1007:1007 LF.Tactics <> p var
R982:984 Coq.Init.Logic <> ::type_scope:x_'='_x not
R981:981 LF.Tactics <> n var
R985:985 LF.Tactics <> m var
prf 1548:1553 <> silly2
R1575:1577 Coq.Init.Datatypes <> nat ind
R1590:1597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1598:1598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1621:1629 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1635:1637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1630:1630 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1632:1632 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1634:1634 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1631:1631 LF.Tactics <> n var
R1633:1633 LF.Tactics <> o var
R1638:1638 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1640:1640 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1642:1642 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1639:1639 LF.Tactics <> m var
R1641:1641 LF.Tactics <> p var
R1604:1607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1613:1615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1608:1608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1610:1610 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1612:1612 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1609:1609 LF.Tactics <> n var
R1611:1611 LF.Tactics <> o var
R1616:1616 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1618:1618 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1620:1620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1617:1617 LF.Tactics <> m var
R1619:1619 LF.Tactics <> p var
R1600:1602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1599:1599 LF.Tactics <> n var
R1603:1603 LF.Tactics <> m var
R1586:1588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1585:1585 LF.Tactics <> n var
R1589:1589 LF.Tactics <> m var
prf 2172:2178 <> silly2a
R2196:2198 Coq.Init.Datatypes <> nat ind
R2220:2229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2230:2230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2277:2286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2290:2292 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2287:2287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2289:2289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2288:2288 LF.Tactics <> n var
R2293:2293 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2295:2295 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2294:2294 LF.Tactics <> m var
R2245:2247 Coq.Init.Datatypes <> nat ind
R2264:2267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2268:2268 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2270:2270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2269:2269 LF.Tactics <> q var
R2274:2274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2276:2276 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2275:2275 LF.Tactics <> r var
R2256:2258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2251:2251 LF.Poly <> :::'('_x_','_x_')' not
R2253:2253 LF.Poly <> :::'('_x_','_x_')' not
R2255:2255 LF.Poly <> :::'('_x_','_x_')' not
R2252:2252 LF.Tactics <> q var
R2254:2254 LF.Tactics <> q var
R2259:2259 LF.Poly <> :::'('_x_','_x_')' not
R2261:2261 LF.Poly <> :::'('_x_','_x_')' not
R2263:2263 LF.Poly <> :::'('_x_','_x_')' not
R2260:2260 LF.Tactics <> r var
R2262:2262 LF.Tactics <> r var
R2212:2214 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2207:2207 LF.Poly <> :::'('_x_','_x_')' not
R2209:2209 LF.Poly <> :::'('_x_','_x_')' not
R2211:2211 LF.Poly <> :::'('_x_','_x_')' not
R2208:2208 LF.Tactics <> n var
R2210:2210 LF.Tactics <> n var
R2215:2215 LF.Poly <> :::'('_x_','_x_')' not
R2217:2217 LF.Poly <> :::'('_x_','_x_')' not
R2219:2219 LF.Poly <> :::'('_x_','_x_')' not
R2216:2216 LF.Tactics <> m var
R2218:2218 LF.Tactics <> m var
prf 2496:2503 <> silly_ex
R2512:2512 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2558:2567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2582:2590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2597:2599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2591:2594 LF.Basics <> oddb def
R2600:2603 LF.Basics <> true constr
R2575:2577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2568:2572 LF.Basics <> evenb def
R2578:2581 LF.Basics <> true constr
R2537:2540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2551:2553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2541:2544 LF.Basics <> oddb def
R2547:2547 Coq.Init.Datatypes <> S constr
R2549:2549 LF.Tactics <> n var
R2554:2557 LF.Basics <> true constr
R2530:2532 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2523:2527 LF.Basics <> evenb def
R2529:2529 LF.Tactics <> n var
R2533:2536 LF.Basics <> true constr
prf 2897:2911 <> silly3_firsttry
R2927:2929 Coq.Init.Datatypes <> nat ind
R2953:2962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2977:2979 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2963:2963 LF.Basics <> ::nat_scope:x_'=?'_x not
R2971:2975 LF.Basics <> ::nat_scope:x_'=?'_x not
R2964:2964 Coq.Init.Datatypes <> S constr
R2967:2967 Coq.Init.Datatypes <> S constr
R2969:2969 LF.Tactics <> n var
R2980:2983 LF.Basics <> true constr
R2942:2945 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2952:2952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2938:2941 LF.Basics <> true constr
R2947:2950 LF.Basics <> ::nat_scope:x_'=?'_x not
R2946:2946 LF.Tactics <> n var
prf 3632:3644 <> rev_exercise1
R3663:3666 LF.Poly <> list ind
R3668:3670 Coq.Init.Datatypes <> nat ind
R3689:3697 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3700:3702 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3698:3699 LF.Tactics <> l' var
R3703:3705 LF.Poly <> rev def
R3707:3707 LF.Tactics <> l var
R3680:3682 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3679:3679 LF.Tactics <> l var
R3683:3685 LF.Poly <> rev def
R3687:3688 LF.Tactics <> l' var
R3788:3801 LF.Poly <> rev_involutive thm
R3788:3801 LF.Poly <> rev_involutive thm
def 4940:4955 <> trans_eq_example
R4981:4983 Coq.Init.Datatypes <> nat ind
R5005:5013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5027:5035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5041:5043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5036:5036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5038:5038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5040:5040 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5037:5037 LF.Tactics <> a var
R5039:5039 LF.Tactics <> b var
R5044:5044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5046:5046 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5048:5048 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5045:5045 LF.Tactics <> e var
R5047:5047 LF.Tactics <> f var
R5019:5021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5014:5014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5016:5016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5018:5018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5015:5015 LF.Tactics <> c var
R5017:5017 LF.Tactics <> d var
R5022:5022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5024:5024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5026:5026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5023:5023 LF.Tactics <> e var
R5025:5025 LF.Tactics <> f var
R4997:4999 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4992:4992 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4994:4994 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4996:4996 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4993:4993 LF.Tactics <> a var
R4995:4995 LF.Tactics <> b var
R5000:5000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5002:5002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5004:5004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5001:5001 LF.Tactics <> c var
R5003:5003 LF.Tactics <> d var
prf 5308:5315 <> trans_eq
R5344:5344 LF.Tactics <> X var
R5355:5358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5364:5367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5369:5371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5368:5368 LF.Tactics <> n var
R5372:5372 LF.Tactics <> o var
R5360:5362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5359:5359 LF.Tactics <> m var
R5363:5363 LF.Tactics <> o var
R5351:5353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5350:5350 LF.Tactics <> n var
R5354:5354 LF.Tactics <> m var
def 5627:5643 <> trans_eq_example'
R5669:5671 Coq.Init.Datatypes <> nat ind
R5693:5701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5715:5723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5729:5731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5724:5724 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5726:5726 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5728:5728 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5725:5725 LF.Tactics <> a var
R5727:5727 LF.Tactics <> b var
R5732:5732 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5734:5734 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5736:5736 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5733:5733 LF.Tactics <> e var
R5735:5735 LF.Tactics <> f var
R5707:5709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5702:5702 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5704:5704 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5706:5706 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5703:5703 LF.Tactics <> c var
R5705:5705 LF.Tactics <> d var
R5710:5710 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5712:5712 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5714:5714 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5711:5711 LF.Tactics <> e var
R5713:5713 LF.Tactics <> f var
R5685:5687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5680:5680 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5682:5682 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5684:5684 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5681:5681 LF.Tactics <> a var
R5683:5683 LF.Tactics <> b var
R5688:5688 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5690:5690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5692:5692 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5689:5689 LF.Tactics <> c var
R5691:5691 LF.Tactics <> d var
R6209:6209 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6211:6211 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6213:6213 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6191:6198 LF.Tactics <> trans_eq thm
R6209:6209 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6211:6211 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6213:6213 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6191:6198 LF.Tactics <> trans_eq thm
def 6686:6703 <> trans_eq_example''
R6729:6731 Coq.Init.Datatypes <> nat ind
R6753:6761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6775:6783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6789:6791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6784:6784 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6786:6786 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6788:6788 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6785:6785 LF.Tactics <> a var
R6787:6787 LF.Tactics <> b var
R6792:6792 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6794:6794 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6796:6796 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6793:6793 LF.Tactics <> e var
R6795:6795 LF.Tactics <> f var
R6767:6769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6762:6762 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6764:6764 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6766:6766 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6763:6763 LF.Tactics <> c var
R6765:6765 LF.Tactics <> d var
R6770:6770 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6772:6772 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6774:6774 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6771:6771 LF.Tactics <> e var
R6773:6773 LF.Tactics <> f var
R6745:6747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6740:6740 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6742:6742 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6744:6744 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6741:6741 LF.Tactics <> a var
R6743:6743 LF.Tactics <> b var
R6748:6748 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6750:6750 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6752:6752 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6749:6749 LF.Tactics <> c var
R6751:6751 LF.Tactics <> d var
R6851:6851 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6853:6853 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6855:6855 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6851:6851 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6853:6853 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6855:6855 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6971:6987 <> trans_eq_exercise
R7009:7011 Coq.Init.Datatypes <> nat ind
R7036:7044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7056:7064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7065:7065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7071:7075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7086:7086 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7067:7069 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R7066:7066 LF.Tactics <> n var
R7070:7070 LF.Tactics <> p var
R7076:7083 LF.Basics <> minustwo def
R7085:7085 LF.Tactics <> o var
R7045:7045 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7051:7054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7047:7049 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R7046:7046 LF.Tactics <> n var
R7050:7050 LF.Tactics <> p var
R7055:7055 LF.Tactics <> m var
R7021:7024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7035:7035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7020:7020 LF.Tactics <> m var
R7025:7032 LF.Basics <> minustwo def
R7034:7034 LF.Tactics <> o var
R7148:7155 LF.Tactics <> trans_eq thm
R7148:7155 LF.Tactics <> trans_eq thm
prf 8512:8522 <> S_injective
R8540:8542 Coq.Init.Datatypes <> nat ind
R8557:8562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8564:8566 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8563:8563 LF.Tactics <> n var
R8567:8567 LF.Tactics <> m var
R8551:8553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8548:8548 Coq.Init.Datatypes <> S constr
R8550:8550 LF.Tactics <> n var
R8554:8554 Coq.Init.Datatypes <> S constr
R8556:8556 LF.Tactics <> m var
R8609:8611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8612:8615 Coq.Init.Peano <> pred syndef
R8618:8618 Coq.Init.Datatypes <> S constr
R8609:8611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8612:8615 Coq.Init.Peano <> pred syndef
R8618:8618 Coq.Init.Datatypes <> S constr
prf 9095:9106 <> S_injective'
R9124:9126 Coq.Init.Datatypes <> nat ind
R9141:9146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9148:9150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9147:9147 LF.Tactics <> n var
R9151:9151 LF.Tactics <> m var
R9135:9137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9132:9132 Coq.Init.Datatypes <> S constr
R9134:9134 LF.Tactics <> n var
R9138:9138 Coq.Init.Datatypes <> S constr
R9140:9140 LF.Tactics <> m var
prf 9662:9674 <> injection_ex1
R9694:9696 Coq.Init.Datatypes <> nat ind
R9717:9722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9726:9728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9723:9723 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9725:9725 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9724:9724 LF.Tactics <> n var
R9729:9729 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9731:9731 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9730:9730 LF.Tactics <> m var
R9708:9710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9702:9702 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9704:9705 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9707:9707 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9703:9703 LF.Tactics <> n var
R9706:9706 LF.Tactics <> m var
R9711:9711 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9713:9714 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9716:9716 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9712:9712 LF.Tactics <> o var
R9715:9715 LF.Tactics <> o var
prf 10026:10038 <> injection_ex2
R10058:10060 Coq.Init.Datatypes <> nat ind
R10081:10086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10090:10092 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10087:10087 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10089:10089 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10088:10088 LF.Tactics <> n var
R10093:10093 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10095:10095 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10094:10094 LF.Tactics <> m var
R10072:10074 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10066:10066 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10068:10069 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10071:10071 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10067:10067 LF.Tactics <> n var
R10070:10070 LF.Tactics <> m var
R10075:10075 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10077:10078 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10080:10080 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10076:10076 LF.Tactics <> o var
R10079:10079 LF.Tactics <> o var
def 10286:10298 <> injection_ex3
R10329:10329 LF.Tactics <> X var
R10339:10342 LF.Poly <> list ind
R10344:10344 LF.Tactics <> X var
R10370:10375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10386:10391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10393:10395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10392:10392 LF.Tactics <> x var
R10396:10396 LF.Tactics <> y var
R10377:10379 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10376:10376 LF.Tactics <> j var
R10381:10384 LF.Poly <> :::x_'::'_x not
R10380:10380 LF.Tactics <> z var
R10385:10385 LF.Tactics <> l var
R10361:10363 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10351:10354 LF.Poly <> :::x_'::'_x not
R10350:10350 LF.Tactics <> x var
R10356:10359 LF.Poly <> :::x_'::'_x not
R10355:10355 LF.Tactics <> y var
R10360:10360 LF.Tactics <> l var
R10365:10368 LF.Poly <> :::x_'::'_x not
R10364:10364 LF.Tactics <> z var
R10369:10369 LF.Tactics <> j var
R10509:10511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10504:10507 LF.Poly <> :::x_'::'_x not
R10513:10516 LF.Poly <> :::x_'::'_x not
R10509:10511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10504:10507 LF.Poly <> :::x_'::'_x not
R10513:10516 LF.Poly <> :::x_'::'_x not
R10531:10538 LF.Tactics <> trans_eq thm
R10531:10538 LF.Tactics <> trans_eq thm
prf 11366:11372 <> eqb_0_l
R11402:11405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11407:11409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11406:11406 LF.Tactics <> n var
R11395:11397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11390:11393 LF.Basics <> ::nat_scope:x_'=?'_x not
R11394:11394 LF.Tactics <> n var
R11398:11401 LF.Basics <> true constr
prf 12204:12219 <> discriminate_ex1
R12235:12237 Coq.Init.Datatypes <> nat ind
R12250:12255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12261:12263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12257:12259 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R12246:12248 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12243:12243 Coq.Init.Datatypes <> S constr
R12245:12245 LF.Tactics <> n var
R12249:12249 Coq.Init.Datatypes <> O constr
prf 12328:12343 <> discriminate_ex2
R12361:12363 Coq.Init.Datatypes <> nat ind
R12381:12386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12390:12392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12387:12387 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R12389:12389 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R12388:12388 LF.Tactics <> n var
R12393:12393 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R12395:12395 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R12394:12394 LF.Tactics <> m var
R12374:12376 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12369:12373 LF.Basics <> false constr
R12377:12380 LF.Basics <> true constr
def 13015:13030 <> discriminate_ex3
R13063:13063 LF.Tactics <> X var
R13073:13076 LF.Poly <> list ind
R13078:13078 LF.Tactics <> X var
R13102:13109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13111:13113 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13110:13110 LF.Tactics <> x var
R13114:13114 LF.Tactics <> z var
R13097:13099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13087:13090 LF.Poly <> :::x_'::'_x not
R13086:13086 LF.Tactics <> x var
R13092:13095 LF.Poly <> :::x_'::'_x not
R13091:13091 LF.Tactics <> y var
R13096:13096 LF.Tactics <> l var
R13100:13101 LF.Poly <> :::'['_']' not
prf 13499:13505 <> f_equal
R13534:13537 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13538:13538 LF.Tactics <> B var
R13533:13533 LF.Tactics <> A var
R13547:13547 LF.Tactics <> A var
R13558:13561 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13565:13567 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13562:13562 LF.Tactics <> f var
R13564:13564 LF.Tactics <> x var
R13568:13568 LF.Tactics <> f var
R13570:13570 LF.Tactics <> y var
R13554:13556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13553:13553 LF.Tactics <> x var
R13557:13557 LF.Tactics <> y var
prf 13642:13662 <> eq_implies_succ_equal
R13680:13682 Coq.Init.Datatypes <> nat ind
R13695:13698 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13702:13704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13699:13699 Coq.Init.Datatypes <> S constr
R13701:13701 LF.Tactics <> n var
R13705:13705 Coq.Init.Datatypes <> S constr
R13707:13707 LF.Tactics <> m var
R13691:13693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13690:13690 LF.Tactics <> n var
R13694:13694 LF.Tactics <> m var
R13737:13743 LF.Tactics <> f_equal thm
R13737:13743 LF.Tactics <> f_equal thm
prf 14168:14189 <> eq_implies_succ_equal'
R14207:14209 Coq.Init.Datatypes <> nat ind
R14222:14225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14229:14231 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14226:14226 Coq.Init.Datatypes <> S constr
R14228:14228 LF.Tactics <> n var
R14232:14232 Coq.Init.Datatypes <> S constr
R14234:14234 LF.Tactics <> m var
R14218:14220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14217:14217 LF.Tactics <> n var
R14221:14221 LF.Tactics <> m var
prf 14717:14721 <> S_inj
R14739:14741 Coq.Init.Datatypes <> nat ind
R14749:14752 LF.Basics <> bool ind
R14779:14788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14795:14797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14790:14793 LF.Basics <> ::nat_scope:x_'=?'_x not
R14789:14789 LF.Tactics <> n var
R14794:14794 LF.Tactics <> m var
R14798:14798 LF.Tactics <> b var
R14775:14777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14761:14761 LF.Basics <> ::nat_scope:x_'=?'_x not
R14765:14770 LF.Basics <> ::nat_scope:x_'=?'_x not
R14774:14774 LF.Basics <> ::nat_scope:x_'=?'_x not
R14762:14762 Coq.Init.Datatypes <> S constr
R14764:14764 LF.Tactics <> n var
R14771:14771 Coq.Init.Datatypes <> S constr
R14773:14773 LF.Tactics <> m var
R14778:14778 LF.Tactics <> b var
prf 15624:15630 <> silly3'
R15646:15648 Coq.Init.Datatypes <> nat ind
R15654:15654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15693:15699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15715:15721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15726:15729 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15744:15744 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15722:15725 LF.Basics <> true constr
R15730:15730 LF.Basics <> ::nat_scope:x_'=?'_x not
R15738:15742 LF.Basics <> ::nat_scope:x_'=?'_x not
R15731:15731 Coq.Init.Datatypes <> S constr
R15734:15734 Coq.Init.Datatypes <> S constr
R15736:15736 LF.Tactics <> n var
R15704:15707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15714:15714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15700:15703 LF.Basics <> true constr
R15709:15712 LF.Basics <> ::nat_scope:x_'=?'_x not
R15708:15708 LF.Tactics <> n var
R15668:15671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15686:15688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15672:15672 LF.Basics <> ::nat_scope:x_'=?'_x not
R15680:15684 LF.Basics <> ::nat_scope:x_'=?'_x not
R15673:15673 Coq.Init.Datatypes <> S constr
R15676:15676 Coq.Init.Datatypes <> S constr
R15678:15678 LF.Tactics <> n var
R15689:15692 LF.Basics <> true constr
R15661:15663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15656:15659 LF.Basics <> ::nat_scope:x_'=?'_x not
R15655:15655 LF.Tactics <> n var
R15664:15667 LF.Basics <> true constr
prf 17338:17360 <> double_injective_FAILED
R17400:17408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17410:17412 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17409:17409 LF.Tactics <> n var
R17413:17413 LF.Tactics <> m var
R17389:17391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17381:17386 LF.Induction <> double def
R17388:17388 LF.Tactics <> n var
R17392:17397 LF.Induction <> double def
R17399:17399 LF.Tactics <> m var
R17716:17722 LF.Tactics <> f_equal thm
R17716:17722 LF.Tactics <> f_equal thm
prf 20043:20058 <> double_injective
R20098:20106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20108:20110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20107:20107 LF.Tactics <> n var
R20111:20111 LF.Tactics <> m var
R20087:20089 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20079:20084 LF.Induction <> double def
R20086:20086 LF.Tactics <> n var
R20090:20095 LF.Induction <> double def
R20097:20097 LF.Tactics <> m var
R21025:21031 LF.Tactics <> f_equal thm
R21025:21031 LF.Tactics <> f_equal thm
prf 22001:22008 <> eqb_true
R22041:22044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22046:22048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22045:22045 LF.Tactics <> n var
R22049:22049 LF.Tactics <> m var
R22034:22036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22029:22032 LF.Basics <> ::nat_scope:x_'=?'_x not
R22028:22028 LF.Tactics <> n var
R22033:22033 LF.Tactics <> m var
R22037:22040 LF.Basics <> true constr
R22446:22452 LF.Tactics <> f_equal thm
R22446:22452 LF.Tactics <> f_equal thm
def 25432:25462 <> manual_grade_for_informal_proof
R25466:25471 Coq.Init.Datatypes <> option ind
R25477:25477 LF.Poly <> ::type_scope:x_'*'_x not
R25474:25476 Coq.Init.Datatypes <> nat ind
R25478:25483 Coq.Strings.String <> string ind
R25489:25492 Coq.Init.Datatypes <> None constr
prf 25725:25742 <> plus_n_n_injective
R25776:25784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25786:25788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25785:25785 LF.Tactics <> n var
R25789:25789 LF.Tactics <> m var
R25768:25770 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25764:25766 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R25763:25763 LF.Tactics <> n var
R25767:25767 LF.Tactics <> n var
R25772:25774 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R25771:25771 LF.Tactics <> m var
R25775:25775 LF.Tactics <> m var
R26137:26143 LF.Tactics <> f_equal thm
R26137:26143 LF.Tactics <> f_equal thm
R26229:26237 LF.Induction <> plus_n_Sm thm
R26229:26237 LF.Induction <> plus_n_Sm thm
R26229:26237 LF.Induction <> plus_n_Sm thm
R26257:26265 LF.Induction <> plus_n_Sm thm
R26257:26265 LF.Induction <> plus_n_Sm thm
R26257:26265 LF.Induction <> plus_n_Sm thm
prf 26650:26678 <> double_injective_take2_FAILED
R26718:26726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26728:26730 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26727:26727 LF.Tactics <> n var
R26731:26731 LF.Tactics <> m var
R26707:26709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26699:26704 LF.Induction <> double def
R26706:26706 LF.Tactics <> n var
R26710:26715 LF.Induction <> double def
R26717:26717 LF.Tactics <> m var
R27034:27040 LF.Tactics <> f_equal thm
R27034:27040 LF.Tactics <> f_equal thm
prf 27980:28001 <> double_injective_take2
R28041:28049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28051:28053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28050:28050 LF.Tactics <> n var
R28054:28054 LF.Tactics <> m var
R28030:28032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28022:28027 LF.Induction <> double def
R28029:28029 LF.Tactics <> n var
R28033:28038 LF.Induction <> double def
R28040:28040 LF.Tactics <> m var
R28540:28546 LF.Tactics <> f_equal thm
R28540:28546 LF.Tactics <> f_equal thm
prf 30667:30686 <> nth_error_after_last
R30701:30703 Coq.Init.Datatypes <> nat ind
R30722:30725 LF.Poly <> list ind
R30727:30727 LF.Tactics <> X var
R30748:30756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30770:30772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30757:30765 LF.Poly <> nth_error def
R30769:30769 LF.Tactics <> n var
R30767:30767 LF.Tactics <> l var
R30773:30776 Coq.Init.Datatypes <> None constr
R30744:30746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30736:30741 LF.Poly <> length def
R30743:30743 LF.Tactics <> l var
R30747:30747 LF.Tactics <> n var
def 31340:31345 <> square
R31353:31355 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R31352:31352 LF.Tactics <> n var
R31356:31356 LF.Tactics <> n var
prf 31427:31437 <> square_mult
R31467:31469 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31453:31458 LF.Tactics <> square def
R31462:31464 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R31461:31461 LF.Tactics <> n var
R31465:31465 LF.Tactics <> m var
R31478:31480 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R31470:31475 LF.Tactics <> square def
R31477:31477 LF.Tactics <> n var
R31481:31486 LF.Tactics <> square def
R31488:31488 LF.Tactics <> m var
R31800:31805 LF.Tactics <> square def
R32124:32133 LF.Induction <> mult_assoc thm
R32124:32133 LF.Induction <> mult_assoc thm
R32124:32133 LF.Induction <> mult_assoc thm
R32159:32161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32155:32157 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32151:32153 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32167:32169 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32163:32165 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32159:32161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32155:32157 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32151:32153 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32167:32169 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32163:32165 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32188:32196 LF.Induction <> mult_comm thm
R32188:32196 LF.Induction <> mult_comm thm
R32188:32196 LF.Induction <> mult_comm thm
R32205:32214 LF.Induction <> mult_assoc thm
R32205:32214 LF.Induction <> mult_assoc thm
R32240:32249 LF.Induction <> mult_assoc thm
R32240:32249 LF.Induction <> mult_assoc thm
R32240:32249 LF.Induction <> mult_assoc thm
def 32628:32630 <> foo
R32636:32638 Coq.Init.Datatypes <> nat ind
prf 32860:32871 <> silly_fact_1
R32894:32896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32890:32892 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32885:32887 LF.Tactics <> foo def
R32889:32889 LF.Tactics <> m var
R32908:32910 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32897:32899 LF.Tactics <> foo def
R32903:32905 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32902:32902 LF.Tactics <> m var
def 33143:33145 <> bar
R33160:33160 LF.Tactics <> x var
R33171:33171 Coq.Init.Datatypes <> O constr
R33182:33182 Coq.Init.Datatypes <> S constr
prf 33256:33274 <> silly_fact_2_FAILED
R33297:33299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33293:33295 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33288:33290 LF.Tactics <> bar def
R33292:33292 LF.Tactics <> m var
R33311:33313 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33300:33302 LF.Tactics <> bar def
R33306:33308 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33305:33305 LF.Tactics <> m var
prf 34300:34311 <> silly_fact_2
R34334:34336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34330:34332 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34325:34327 LF.Tactics <> bar def
R34329:34329 LF.Tactics <> m var
R34348:34350 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34337:34339 LF.Tactics <> bar def
R34343:34345 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34342:34342 LF.Tactics <> m var
prf 34698:34710 <> silly_fact_2'
R34733:34735 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34729:34731 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34724:34726 LF.Tactics <> bar def
R34728:34728 LF.Tactics <> m var
R34747:34749 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34736:34738 LF.Tactics <> bar def
R34742:34744 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34741:34741 LF.Tactics <> m var
R34781:34783 LF.Tactics <> bar def
def 35429:35436 <> sillyfun
R35443:35445 Coq.Init.Datatypes <> nat ind
R35450:35453 LF.Basics <> bool ind
R35464:35467 LF.Basics <> ::nat_scope:x_'=?'_x not
R35463:35463 LF.Tactics <> n var
R35492:35495 LF.Basics <> ::nat_scope:x_'=?'_x not
R35491:35491 LF.Tactics <> n var
R35516:35520 LF.Basics <> false constr
R35503:35507 LF.Basics <> false constr
R35475:35479 LF.Basics <> false constr
prf 35532:35545 <> sillyfun_false
R35561:35563 Coq.Init.Datatypes <> nat ind
R35579:35581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35569:35576 LF.Tactics <> sillyfun def
R35578:35578 LF.Tactics <> n var
R35582:35586 LF.Basics <> false constr
R35615:35622 LF.Tactics <> sillyfun def
R35638:35641 LF.Basics <> ::nat_scope:x_'=?'_x not
R35638:35641 LF.Basics <> ::nat_scope:x_'=?'_x not
R35730:35733 LF.Basics <> ::nat_scope:x_'=?'_x not
R35730:35733 LF.Basics <> ::nat_scope:x_'=?'_x not
def 36607:36611 <> split
R36631:36634 LF.Poly <> list ind
R36638:36638 LF.Poly <> ::type_scope:x_'*'_x not
R36637:36637 LF.Tactics <> X var
R36639:36639 LF.Tactics <> Y var
R36660:36660 LF.Poly <> ::type_scope:x_'*'_x not
R36667:36671 LF.Poly <> ::type_scope:x_'*'_x not
R36678:36678 LF.Poly <> ::type_scope:x_'*'_x not
R36661:36664 LF.Poly <> list ind
R36666:36666 LF.Tactics <> X var
R36672:36675 LF.Poly <> list ind
R36677:36677 LF.Tactics <> Y var
R36691:36691 LF.Tactics <> l var
R36702:36703 LF.Poly <> :::'['_']' not
R36708:36708 LF.Poly <> :::'('_x_','_x_')' not
R36711:36712 LF.Poly <> :::'('_x_','_x_')' not
R36715:36715 LF.Poly <> :::'('_x_','_x_')' not
R36709:36710 LF.Poly <> :::'['_']' not
R36713:36714 LF.Poly <> :::'['_']' not
R36727:36730 LF.Poly <> :::x_'::'_x not
R36721:36721 LF.Poly <> :::'('_x_','_x_')' not
R36723:36724 LF.Poly <> :::'('_x_','_x_')' not
R36726:36726 LF.Poly <> :::'('_x_','_x_')' not
R36748:36752 LF.Tactics <> split def
R36769:36769 LF.Poly <> :::'('_x_','_x_')' not
R36772:36773 LF.Poly <> :::'('_x_','_x_')' not
R36776:36776 LF.Poly <> :::'('_x_','_x_')' not
R36781:36781 LF.Poly <> :::'('_x_','_x_')' not
R36789:36790 LF.Poly <> :::'('_x_','_x_')' not
R36798:36798 LF.Poly <> :::'('_x_','_x_')' not
R36783:36786 LF.Poly <> :::x_'::'_x not
R36792:36795 LF.Poly <> :::x_'::'_x not
prf 36908:36920 <> combine_split
R36940:36943 LF.Poly <> list ind
R36947:36949 LF.Poly <> ::type_scope:x_'*'_x not
R36946:36946 LF.Tactics <> X var
R36950:36950 LF.Tactics <> Y var
R36981:36986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37000:37002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36987:36993 LF.Poly <> combine def
R36998:36999 LF.Tactics <> l2 var
R36995:36996 LF.Tactics <> l1 var
R37003:37003 LF.Tactics <> l var
R36970:36972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36963:36967 LF.Tactics <> split def
R36969:36969 LF.Tactics <> l var
R36973:36973 LF.Poly <> :::'('_x_','_x_')' not
R36976:36977 LF.Poly <> :::'('_x_','_x_')' not
R36980:36980 LF.Poly <> :::'('_x_','_x_')' not
R36974:36975 LF.Tactics <> l1 var
R36978:36979 LF.Tactics <> l2 var
R37284:37288 LF.Tactics <> split def
R37284:37288 LF.Tactics <> split def
def 37934:37942 <> sillyfun1
R37949:37951 Coq.Init.Datatypes <> nat ind
R37956:37959 LF.Basics <> bool ind
R37970:37973 LF.Basics <> ::nat_scope:x_'=?'_x not
R37969:37969 LF.Tactics <> n var
R37997:38000 LF.Basics <> ::nat_scope:x_'=?'_x not
R37996:37996 LF.Tactics <> n var
R38020:38024 LF.Basics <> false constr
R38008:38011 LF.Basics <> true constr
R37981:37984 LF.Basics <> true constr
prf 38219:38238 <> sillyfun1_odd_FAILED
R38254:38256 Coq.Init.Datatypes <> nat ind
R38283:38291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38298:38300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38292:38295 LF.Basics <> oddb def
R38297:38297 LF.Tactics <> n var
R38301:38304 LF.Basics <> true constr
R38276:38278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38265:38273 LF.Tactics <> sillyfun1 def
R38275:38275 LF.Tactics <> n var
R38279:38282 LF.Basics <> true constr
R38336:38344 LF.Tactics <> sillyfun1 def
R38366:38369 LF.Basics <> ::nat_scope:x_'=?'_x not
R38366:38369 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 39169:39181 <> sillyfun1_odd
R39197:39199 Coq.Init.Datatypes <> nat ind
R39226:39234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39241:39243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39235:39238 LF.Basics <> oddb def
R39240:39240 LF.Tactics <> n var
R39244:39247 LF.Basics <> true constr
R39219:39221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39208:39216 LF.Tactics <> sillyfun1 def
R39218:39218 LF.Tactics <> n var
R39222:39225 LF.Basics <> true constr
R39279:39287 LF.Tactics <> sillyfun1 def
R39309:39312 LF.Basics <> ::nat_scope:x_'=?'_x not
R39309:39312 LF.Basics <> ::nat_scope:x_'=?'_x not
R39558:39565 LF.Tactics <> eqb_true thm
R39558:39565 LF.Tactics <> eqb_true thm
R39856:39859 LF.Basics <> ::nat_scope:x_'=?'_x not
R39856:39859 LF.Basics <> ::nat_scope:x_'=?'_x not
R39916:39923 LF.Tactics <> eqb_true thm
R39916:39923 LF.Tactics <> eqb_true thm
prf 40100:40121 <> bool_fn_applied_thrice
R40143:40146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40147:40150 LF.Basics <> bool ind
R40139:40142 LF.Basics <> bool ind
R40158:40161 LF.Basics <> bool ind
R40178:40180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40167:40167 LF.Tactics <> f var
R40170:40170 LF.Tactics <> f var
R40173:40173 LF.Tactics <> f var
R40175:40175 LF.Tactics <> b var
R40181:40181 LF.Tactics <> f var
R40183:40183 LF.Tactics <> b var
R40274:40277 LF.Basics <> true constr
R40274:40277 LF.Basics <> true constr
R40411:40415 LF.Basics <> false constr
R40411:40415 LF.Basics <> false constr
R40577:40581 LF.Basics <> false constr
R40577:40581 LF.Basics <> false constr
R40644:40647 LF.Basics <> true constr
R40644:40647 LF.Basics <> true constr
prf 43453:43459 <> eqb_sym
R43477:43479 Coq.Init.Datatypes <> nat ind
R43485:43485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43492:43496 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43503:43503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43487:43490 LF.Basics <> ::nat_scope:x_'=?'_x not
R43486:43486 LF.Tactics <> n var
R43491:43491 LF.Tactics <> m var
R43498:43501 LF.Basics <> ::nat_scope:x_'=?'_x not
R43497:43497 LF.Tactics <> m var
R43502:43502 LF.Tactics <> n var
prf 45233:45241 <> eqb_trans
R45274:45279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45293:45298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45305:45307 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45300:45303 LF.Basics <> ::nat_scope:x_'=?'_x not
R45299:45299 LF.Tactics <> n var
R45304:45304 LF.Tactics <> p var
R45308:45311 LF.Basics <> true constr
R45286:45288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45281:45284 LF.Basics <> ::nat_scope:x_'=?'_x not
R45280:45280 LF.Tactics <> m var
R45285:45285 LF.Tactics <> p var
R45289:45292 LF.Basics <> true constr
R45267:45269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45262:45265 LF.Basics <> ::nat_scope:x_'=?'_x not
R45261:45261 LF.Tactics <> n var
R45266:45266 LF.Tactics <> m var
R45270:45273 LF.Basics <> true constr
R45379:45386 LF.Tactics <> eqb_true thm
R45379:45386 LF.Tactics <> eqb_true thm
def 46156:46178 <> split_combine_statement
R46323:46326 LF.Poly <> list ind
R46328:46328 LF.Tactics <> X var
R46337:46340 LF.Poly <> list ind
R46342:46342 LF.Tactics <> Y var
R46371:46374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46396:46398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46375:46379 LF.Tactics <> split def
R46382:46388 LF.Poly <> combine def
R46393:46394 LF.Tactics <> l2 var
R46390:46391 LF.Tactics <> l1 var
R46399:46399 LF.Poly <> :::'('_x_','_x_')' not
R46402:46403 LF.Poly <> :::'('_x_','_x_')' not
R46406:46406 LF.Poly <> :::'('_x_','_x_')' not
R46400:46401 LF.Tactics <> l1 var
R46404:46405 LF.Tactics <> l2 var
R46359:46361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46350:46355 LF.Poly <> length def
R46357:46358 LF.Tactics <> l1 var
R46362:46367 LF.Poly <> length def
R46369:46370 LF.Tactics <> l2 var
prf 46418:46430 <> split_combine
R46434:46456 LF.Tactics <> split_combine_statement def
prf 46929:46942 <> split_combine'
R46972:46975 LF.Poly <> list ind
R46977:46977 LF.Tactics <> X var
R46986:46989 LF.Poly <> list ind
R46991:46991 LF.Tactics <> Y var
R47015:47018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47040:47042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47019:47023 LF.Tactics <> split def
R47026:47032 LF.Poly <> combine def
R47037:47038 LF.Tactics <> l2 var
R47034:47035 LF.Tactics <> l1 var
R47043:47043 LF.Poly <> :::'('_x_','_x_')' not
R47046:47047 LF.Poly <> :::'('_x_','_x_')' not
R47050:47050 LF.Poly <> :::'('_x_','_x_')' not
R47044:47045 LF.Tactics <> l1 var
R47048:47049 LF.Tactics <> l2 var
R47005:47007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46997:46997 LF.Poly <> :::'('_x_','_x_')' not
R47000:47001 LF.Poly <> :::'('_x_','_x_')' not
R47004:47004 LF.Poly <> :::'('_x_','_x_')' not
R46998:46999 LF.Tactics <> l1 var
R47002:47003 LF.Tactics <> l2 var
R47008:47012 LF.Tactics <> split def
R47014:47014 LF.Tactics <> l var
R47294:47298 LF.Tactics <> split def
R47294:47298 LF.Tactics <> split def
prf 47448:47468 <> split_combine''_equiv
R47500:47503 LF.Poly <> list ind
R47505:47505 LF.Tactics <> X var
R47514:47517 LF.Poly <> list ind
R47519:47519 LF.Tactics <> Y var
R47527:47527 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47582:47592 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47632:47632 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47546:47549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47571:47573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47550:47554 LF.Tactics <> split def
R47557:47563 LF.Poly <> combine def
R47568:47569 LF.Tactics <> l2 var
R47565:47566 LF.Tactics <> l1 var
R47574:47574 LF.Poly <> :::'('_x_','_x_')' not
R47577:47578 LF.Poly <> :::'('_x_','_x_')' not
R47581:47581 LF.Poly <> :::'('_x_','_x_')' not
R47575:47576 LF.Tactics <> l1 var
R47579:47580 LF.Tactics <> l2 var
R47535:47537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47528:47532 LF.Tactics <> split def
R47534:47534 LF.Tactics <> l var
R47538:47538 LF.Poly <> :::'('_x_','_x_')' not
R47541:47542 LF.Poly <> :::'('_x_','_x_')' not
R47545:47545 LF.Poly <> :::'('_x_','_x_')' not
R47539:47540 LF.Tactics <> l1 var
R47543:47544 LF.Tactics <> l2 var
R47611:47614 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47628:47630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47615:47621 LF.Poly <> combine def
R47626:47627 LF.Tactics <> l2 var
R47623:47624 LF.Tactics <> l1 var
R47631:47631 LF.Tactics <> l var
R47600:47602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47593:47597 LF.Tactics <> split def
R47599:47599 LF.Tactics <> l var
R47603:47603 LF.Poly <> :::'('_x_','_x_')' not
R47606:47607 LF.Poly <> :::'('_x_','_x_')' not
R47610:47610 LF.Poly <> :::'('_x_','_x_')' not
R47604:47605 LF.Tactics <> l1 var
R47608:47609 LF.Tactics <> l2 var
R47774:47778 LF.Tactics <> split def
R47774:47778 LF.Tactics <> split def
R47822:47828 LF.Tactics <> f_equal thm
R47822:47828 LF.Tactics <> f_equal thm
R47891:47895 LF.Tactics <> split def
R47898:47904 LF.Poly <> combine def
R47891:47895 LF.Tactics <> split def
R47898:47904 LF.Poly <> combine def
prf 48012:48026 <> split_combine''
R48046:48049 LF.Poly <> list ind
R48053:48055 LF.Poly <> ::type_scope:x_'*'_x not
R48052:48052 LF.Tactics <> X var
R48056:48056 LF.Tactics <> Y var
R48089:48092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48106:48108 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48093:48099 LF.Poly <> combine def
R48104:48105 LF.Tactics <> l2 var
R48101:48102 LF.Tactics <> l1 var
R48109:48109 LF.Tactics <> l var
R48078:48080 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48071:48075 LF.Tactics <> split def
R48077:48077 LF.Tactics <> l var
R48081:48081 LF.Poly <> :::'('_x_','_x_')' not
R48084:48085 LF.Poly <> :::'('_x_','_x_')' not
R48088:48088 LF.Poly <> :::'('_x_','_x_')' not
R48082:48083 LF.Tactics <> l1 var
R48086:48087 LF.Tactics <> l2 var
R48359:48363 LF.Tactics <> split def
R48359:48363 LF.Tactics <> split def
def 48561:48590 <> manual_grade_for_split_combine
R48594:48599 Coq.Init.Datatypes <> option ind
R48605:48605 LF.Poly <> ::type_scope:x_'*'_x not
R48602:48604 Coq.Init.Datatypes <> nat ind
R48606:48611 Coq.Strings.String <> string ind
R48617:48620 Coq.Init.Datatypes <> None constr
prf 48799:48813 <> filter_exercise
R48844:48847 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48848:48851 LF.Basics <> bool ind
R48843:48843 LF.Tactics <> X var
R48888:48888 LF.Tactics <> X var
R48899:48902 LF.Poly <> list ind
R48904:48904 LF.Tactics <> X var
R48936:48944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48951:48953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48945:48948 LF.Tactics <> test var
R48950:48950 LF.Tactics <> x var
R48954:48957 LF.Basics <> true constr
R48926:48928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48913:48918 LF.Poly <> filter def
R48925:48925 LF.Tactics <> l var
R48920:48923 LF.Tactics <> test var
R48930:48933 LF.Poly <> :::x_'::'_x not
R48929:48929 LF.Tactics <> x var
R48934:48935 LF.Tactics <> lf var
def 50273:50279 <> forallb
R50301:50304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50305:50308 LF.Basics <> bool ind
R50300:50300 LF.Tactics <> X var
R50316:50319 LF.Poly <> list ind
R50321:50321 LF.Tactics <> X var
R50326:50329 LF.Basics <> bool ind
R50360:50360 LF.Tactics <> l var
R50373:50374 LF.Poly <> :::'['_']' not
R50379:50382 LF.Basics <> true constr
R50391:50394 LF.Poly <> :::x_'::'_x not
R50401:50404 LF.Basics <> andb def
R50416:50422 LF.Tactics <> forallb def
R50424:50427 LF.Tactics <> test var
R50407:50410 LF.Tactics <> test var
def 50449:50462 <> test_forallb_1
R50490:50492 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50466:50472 LF.Tactics <> forallb def
R50479:50479 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50481:50481 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50483:50483 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50485:50485 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50487:50487 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50489:50489 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50474:50477 LF.Basics <> oddb def
R50493:50496 LF.Basics <> true constr
def 50550:50563 <> test_forallb_2
R50593:50595 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50567:50573 LF.Tactics <> forallb def
R50580:50580 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50586:50586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50592:50592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50581:50585 LF.Basics <> false constr
R50587:50591 LF.Basics <> false constr
R50575:50578 LF.Basics <> negb def
R50596:50599 LF.Basics <> true constr
def 50653:50666 <> test_forallb_3
R50693:50695 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50670:50676 LF.Tactics <> forallb def
R50684:50684 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50686:50686 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50688:50688 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50690:50690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50692:50692 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R50678:50682 LF.Basics <> evenb def
R50696:50700 LF.Basics <> false constr
def 50754:50767 <> test_forallb_4
R50789:50791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50771:50777 LF.Tactics <> forallb def
R50787:50788 LF.Poly <> :::'['_']' not
R50780:50782 LF.Basics <> eqb def
R50792:50795 LF.Basics <> true constr
def 50850:50856 <> existsb
R50878:50881 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50882:50885 LF.Basics <> bool ind
R50877:50877 LF.Tactics <> X var
R50893:50896 LF.Poly <> list ind
R50898:50898 LF.Tactics <> X var
R50903:50906 LF.Basics <> bool ind
R50937:50937 LF.Tactics <> l var
R50950:50951 LF.Poly <> :::'['_']' not
R50956:50960 LF.Basics <> false constr
R50969:50972 LF.Poly <> :::x_'::'_x not
R50979:50981 LF.Basics <> orb def
R50993:50999 LF.Tactics <> existsb def
R51001:51004 LF.Tactics <> test var
R50984:50987 LF.Tactics <> test var
def 51026:51039 <> test_existsb_1
R51068:51070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51043:51049 LF.Tactics <> existsb def
R51059:51059 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51061:51061 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51063:51063 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51065:51065 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51067:51067 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51052:51054 LF.Basics <> eqb def
R51071:51075 LF.Basics <> false constr
def 51129:51142 <> test_existsb_2
R51183:51185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51146:51152 LF.Tactics <> existsb def
R51166:51166 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51171:51171 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51176:51176 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51182:51182 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51167:51170 LF.Basics <> true constr
R51172:51175 LF.Basics <> true constr
R51177:51181 LF.Basics <> false constr
R51155:51158 LF.Basics <> andb def
R51160:51163 LF.Basics <> true constr
R51186:51189 LF.Basics <> true constr
def 51243:51256 <> test_existsb_3
R51286:51288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51260:51266 LF.Tactics <> existsb def
R51273:51273 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51275:51275 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51277:51277 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51279:51279 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51281:51281 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51283:51283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51285:51285 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R51268:51271 LF.Basics <> oddb def
R51289:51292 LF.Basics <> true constr
def 51346:51359 <> test_existsb_4
R51379:51381 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51363:51369 LF.Tactics <> existsb def
R51377:51378 LF.Poly <> :::'['_']' not
R51371:51375 LF.Basics <> evenb def
R51382:51386 LF.Basics <> false constr
def 51443:51450 <> existsb'
R51472:51475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51476:51479 LF.Basics <> bool ind
R51471:51471 LF.Tactics <> X var
R51487:51490 LF.Poly <> list ind
R51492:51492 LF.Tactics <> X var
R51497:51500 LF.Basics <> bool ind
R51525:51528 LF.Basics <> negb def
R51531:51537 LF.Tactics <> forallb def
R51564:51564 LF.Tactics <> l var
R51549:51552 LF.Basics <> negb def
R51555:51558 LF.Tactics <> test var
R51560:51560 LF.Tactics <> x var
prf 51577:51592 <> existsb_existsb'
R51623:51626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51627:51630 LF.Basics <> bool ind
R51622:51622 LF.Tactics <> X var
R51638:51641 LF.Poly <> list ind
R51643:51643 LF.Tactics <> X var
R51663:51665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51649:51655 LF.Tactics <> existsb def
R51662:51662 LF.Tactics <> l var
R51657:51660 LF.Tactics <> test var
R51666:51673 LF.Tactics <> existsb' def
R51680:51680 LF.Tactics <> l var
R51675:51678 LF.Tactics <> test var
R51723:51730 LF.Tactics <> existsb' def
